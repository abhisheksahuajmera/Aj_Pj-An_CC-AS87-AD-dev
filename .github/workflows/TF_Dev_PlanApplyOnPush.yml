name: Terraform Plan and Apply

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - feature_AS127_dev_100

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  resourcegroups:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    name: 'Terraform Plan and Apply'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_FEA_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_FEA_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_FEA_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_FEA_TENANT_ID }}
      # ARM_CLIENT_ID: ${{ secrets.AZURE_QA_CLIENT_ID }}
      # ARM_CLIENT_SECRET: ${{ secrets.AZURE_QA_CLIENT_SECRET }}
      # ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_QA_SUBSCRIPTION_ID }}
      # ARM_TENANT_ID: ${{ secrets.AZURE_QA_TENANT_ID }}

      AZDO_PERSONAL_ACCESS_TOKEN: ${{ secrets.AZDO_PERSONAL_ACCESS_TOKEN }}
      AZDO_ORG_SERVICE_URL: ${{ secrets.AZDO_ORG_SERVICE_URL }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Config File Driven
      - name: 'Terraform init'
        id: init
      #   # run: terraform init -upgrade=true -input=false 
        run: terraform init -upgrade=true -backend-config=configs/dev_backend.hcl

      # CLI Driven
      # - name: 'Terraform init'
      #   # run: terraform init -upgrade=true -input=false 
      #   id: init
      #   run: |
      #     terraform init -upgrade=true \
      #     -backend-config="state_resource_group_name=Assetronai-dev-101-rg-108" \
      #     -backend-config="state_storage_account_name=sa110" \
      #     -backend-config="state_container_name=sacon100" \         
      #     -backend-config="state_key=state103.tfstate"  \         

# resource_group_name   = "assetronai-dev-100"
# storage_account_name  = "sa712"
# container_name        = "sacon101"
# key                   = "state103.tfstate"
# # key                   = var.state_file_name

        

      - name: 'Terraform plan'
        id: plan
        run: terraform plan -var-file=configs/dev.tfvars
          
      - name: 'Terraform apply'
        id: apply
        run: terraform apply -auto-approve -var-file=configs/dev.tfvars
