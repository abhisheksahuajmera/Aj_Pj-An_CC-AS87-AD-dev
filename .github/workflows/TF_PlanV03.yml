name: 'Terraform-Plan-Infra-PlanV03'

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - 'feature/*'
    paths:
      - './**'
      - '.github/workflows/TF_PlanV03.yml'

env:
  WORKING_DIR: "./"
  TF_VER: 1.4.6
  TARGET_ENV: dev
  BACKEND_FILE: provider.tf
  #
  TF_VAR_client_id: 'c1d00aec-4e92-4fae-88a7-1d68a129b074'
  TF_VAR_subscription_id: '729672c5-d8c3-49fd-be05-c404781c9394'
  TF_VAR_environment: 'dev'

  

jobs:
  tf-plan:
    timeout-minutes: ${{ fromJSON(vars.JOB_TIMEOUT_MINUTES_SHORT) }}
    name: 'terraform: init,validate,plan'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: Run> terraform init
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform init -upgrade -input=false -reconfigure -backend-config="${{ env.TARGET_ENV }}/${{ env.BACKEND_FILE }}"

      - name: Run> terraform validate
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform validate

      - name: Run> terraform plan
        id: tf-plan
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform plan -detailed-exitcode -input=false
        continue-on-error: true

      - name: Check for "terraform plan" failure
        if: steps.tf-plan.outputs.exitcode == 1
        run: exit 1

    outputs:
      tf-plan-exit-code: ${{ steps.tf-plan.outputs.exitcode }}
